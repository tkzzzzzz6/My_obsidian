-- ===========================================
-- 题目：取"商品数量"排在前3名的商品类别，并且把第3名的并列也一并返回
-- 知识点：TOP WITH TIES、分组查询、聚合函数、排序、并列处理
-- ===========================================

-- 题目背景说明：
-- 1. 业务场景：在商品管理系统中，需要统计每个商品类别下的商品数量
-- 2. 需求分析：找出商品数量最多的前3个类别
-- 3. 特殊情况：如果第3名有并列（多个类别商品数量相同），需要全部返回
-- 4. 技术要点：使用TOP WITH TIES来处理并列情况

-- 核心SQL查询语句
SELECT TOP (3) WITH TIES          -- 取前3条记录，WITH TIES处理并列情况
       商品类别,                   -- 要展示的分组字段：商品类别
       COUNT(*) AS 商品数量        -- 每个类别下的商品条目数
FROM   商品表                     -- 数据来源表
GROUP BY 商品类别                 -- 先按商品类别分组做聚合统计
ORDER BY COUNT(*) DESC;           -- 按"商品数量"从大到小排序；WITH TIES 依据该排序保留并列

-- ===========================================
-- 相关知识点详解：
-- ===========================================

-- 1. TOP 子句
--    - 语法：TOP (n) [WITH TIES]
--    - 作用：限制返回结果集的行数
--    - 示例：TOP (3) 表示返回前3条记录

-- 2. WITH TIES 关键字
--    - 作用：当最后一条记录有并列值时，将并列的记录也包含在结果中
--    - 使用条件：必须与ORDER BY子句配合使用
--    - 应用场景：处理排名中的并列情况

-- 3. GROUP BY 分组查询
--    - 作用：将数据按指定字段分组
--    - 配合聚合函数：COUNT、SUM、AVG等
--    - 结果：每个分组产生一行结果

-- 4. COUNT(*) 聚合函数
--    - 作用：统计每个分组中的记录数
--    - 与COUNT(字段名)的区别：COUNT(*)统计所有行，包括NULL值
--    - 别名：使用AS关键字给结果列起别名

-- 5. ORDER BY 排序
--    - 语法：ORDER BY 字段名 [ASC|DESC]
--    - DESC：降序排列（从大到小）
--    - ASC：升序排列（从小到大，默认）

-- ===========================================
-- 执行逻辑分析：
-- ===========================================
-- 1. FROM 商品表：从商品表中读取数据
-- 2. GROUP BY 商品类别：按商品类别分组
-- 3. COUNT(*) AS 商品数量：统计每个类别的商品数量
-- 4. ORDER BY COUNT(*) DESC：按商品数量降序排列
-- 5. TOP (3) WITH TIES：取前3名，如果有并列第3名则全部返回

-- ===========================================
-- 示例数据说明：
-- ===========================================
-- 假设商品表数据如下：
-- 商品类别    商品数量
-- 电子产品    15
-- 服装       12
-- 食品       10
-- 图书       10  ← 与食品并列第3名
-- 家居       8
-- 
-- 查询结果：
-- 商品类别    商品数量
-- 电子产品    15
-- 服装       12
-- 食品       10
-- 图书       10  ← WITH TIES确保并列第3名也被返回
